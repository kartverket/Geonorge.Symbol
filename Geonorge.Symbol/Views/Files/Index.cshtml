@model List<Geonorge.Symbol.Models.Symbol>
@using Geonorge.Symbol.Models;
@section breadcrumb {
    <li>Symbol</li>
}
@{
    ViewBag.Title = "Symboler";
    var symbolsAll = (List<Symbol>)ViewBag.symbolsAll;
}
@Html.Partial("_SearchBarPartial")

<section class="heading">
    <div class="row">
        <div class="col-sm-12">
            <h1 class="shortcut">
                Symboler
            </h1>
        </div>
        <div class="col-sm-12">
            <span class="separator-lg"></span>
        </div>
    </div>
</section>
<div class="row">
    <div class="col-no-padding-xs col-xs-12 col-sm-10 col-md-10 col-lg-10">
        Dette registeret inneholder symboler som brukes til styling av digital kartografi, og til bruk i grafisk bransje.
    </div>
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        @if (Request.IsAuthenticated)
        {
            if (ViewBag.IsAdmin)
            {
                <a class="btn btn-default btn-space pull-right" style="margin-left: 15px;" href="@VirtualPathUtility.ToAbsolute("~/symbolpackages/")">Pakker</a>
            }
            <a class="btn btn-default btn-space pull-right" href="@VirtualPathUtility.ToAbsolute("~/files/Create")">Registrer symbol</a>
        }
    </div>
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <div id="packageView" class="search-results row">
            <br /><br />
            @{ int counter = 1;
                bool startDivWritten = false;
                var packageList = Model.Where(s => s.SymbolPackages.Any()).Select(p => p.SymbolPackages.FirstOrDefault()).ToList().OrderBy(o => o.SortOrder);

                var packages = packageList
                    .Where(pac => pac != null)
                    .Select(pp => new
                    {
                        SystemId = pp.SystemId,
                        Name = pp.Name,
                        Owner = pp.Owner,
                        Theme = pp.Theme,
                        OfficialStatus = pp.OfficialStatus,
                        Total = pp.Symbols.Count
                    })
                    .Distinct();
            }
            @foreach (var package in packages)
            {
                if (package != null)
                {
                    if (counter == 1)
                    {
                        ViewContext.Writer.Write("<div class=\"row\">");
                        startDivWritten = true;
                    }
                    <div class="col-md-3">
                        <div class="package-wrapper">
                            @{
                                List<Symbol> symbols = null;
                                if (!string.IsNullOrEmpty(ViewBag.text))
                                {
                                    symbols = Model.Where(p => p.SymbolPackages.Any(pp => pp.SystemId == package.SystemId)).ToList();
                                }
                                else
                                {
                                    symbols = symbolsAll.Where(p => p.SymbolPackages.Any(pp => pp.SystemId == package.SystemId)).ToList();
                                }

                                if (symbols.Any())
                                {
                                    const int MAX_SYMBOLS = 18;

                                    <div class="thumbnail-wrapper">
                                        @for (int i = 0; i < symbols.Count; i++)
                                        {
                                            if (i == MAX_SYMBOLS)
                                            {
                                                break;
                                            }

                                            <img src="@symbols[i].ThumbnailUrl()" alt="@symbols[i].Name" />
                                        }
                                    </div>
                                }
                            }

                            <h4 style="font-weight:bold">@package.Name</h4>
                            <p>
                                @if (!string.IsNullOrEmpty(ViewBag.text))
                                {
                                    <span>Antall symboler i pakke: @symbols.Count/@package.Total</span><br />
                                }
                                else
                                {
                                    <span>Antall symboler i pakke: @package.Total</span><br />
                                }
                                Eier: @package.Owner<br />
                                Tema: @package.Theme<br />
                                <label style="font-weight: normal;">Offisiell symbolpakke: @Html.DisplayFor(model => package.OfficialStatus) </label><br /><br />
                                <a class="btn btn-default btn-space" href="@VirtualPathUtility.ToAbsolute("~/symbolpackages/details/")@package.SystemId">Detaljert informasjon</a>
                            </p>
                        </div>
                    </div>
                            if (counter == 4)
                            {
                                ViewContext.Writer.Write("</div>");
                                counter = 1;
                                startDivWritten = false;
                            }
                            else { counter++; }
                        }
                    }

                   @if (startDivWritten)
                   {
                       ViewContext.Writer.Write("</div>");
                   }

            <div id="tableView" class="search-results">
                <div class="row search-results-table-heading">
                    <div class="col-sm-4"><p><a href="@VirtualPathUtility.ToAbsolute("~/Files/Index?sortOrder=")@(ViewBag.SymbolnameSortParm)&text=@(ViewBag.text)" class="@(ViewBag.SortOrder.Contains("symbolname") ? (ViewBag.SymbolnameSortParm.Contains("desc") ? "sorted-desc" : "sorted-asc") : "" )">Symbolnavn</a></p></div>
                    <div class="col-sm-4"><p><a href="@VirtualPathUtility.ToAbsolute("~/Files/Index?sortOrder=")@(ViewBag.Owner)&text=@(ViewBag.text)" class="@(ViewBag.SortOrder.Contains("owner") ? (ViewBag.Owner.Contains("desc") ? "sorted-desc" : "sorted-asc") : "" )">Eier</a></p></div>
                    <div class="col-sm-3"><p><a href="@VirtualPathUtility.ToAbsolute("~/Files/Index?sortOrder=")@(ViewBag.Theme)&text=@(ViewBag.text)" class="@(ViewBag.SortOrder.Contains("theme") ? (ViewBag.Owner.Contains("desc") ? "sorted-desc" : "sorted-asc") : "" )">Tema</a></p></div>
                    <div class="col-sm-1"><p>Symbol</p></div>
                </div>

                <div class="menu-separator search-results-table-heading"></div>
                <div class="striped-list">
                    <div id="symbollist" class="scroll">
                        <div class="next"><a href="@VirtualPathUtility.ToAbsolute("~/Files/SymbolList?page=")@(ViewBag.Page)&sortOrder=@(ViewBag.SortOrder)&text=@ViewBag.text">Laster...</a></div>
                    </div>
                </div>
            </div>
        </div>
    <div class="clearfix"></div>
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 hidden-print">
        <a class="hidden-print show-loading-animation pull-left" data-loading-message="Henter innhold" href="/">Tilbake</a>
    </div>
</div>

@section scripts{
    <script src="@VirtualPathUtility.ToAbsolute("~/Scripts/jquery.jscroll.js")"></script>
    <script>
        $(function () {
            $('#symbollist').jscroll({
                debug: true
            });
        });
    </script>
}
