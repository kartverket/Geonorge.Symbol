@model Geonorge.Symbol.Models.SymbolPackage
@section breadcrumb {
    <li><a href="@VirtualPathUtility.ToAbsolute("~/files/index")">Symbol</a></li>
    <li><a href="@VirtualPathUtility.ToAbsolute("~/symbolpackages/")">Symbolpakker</a></li>
    <li>Opprett</li>
}
@{
    ViewBag.Title = "Symbolpakke opprett";
}
<section class="heading">
    <div class="row">
        <div class="col-sm-12">
            <h1 class="shortcut">
                Opprett pakke
            </h1>
        </div>
        <div class="col-sm-12">
            <span class="separator-lg"></span>
        </div>
    </div>
</section>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.OfficialStatus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.OfficialStatus)
                    @Html.ValidationMessageFor(model => model.OfficialStatus, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Owner, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (ViewBag.IsAdmin)
                {
                    <select class="ownerOrganizationSelect form-control" id="Owner" name="Owner"> </select>
                    @Html.ValidationMessageFor(model => model.Owner, "", new { @class = "text-danger" })
                }
                else
                {
                    <span>@Model.Owner</span>
                    <input type="hidden" name="Owner" value="@Model.Owner" />
                }
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Theme, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="custom-select">
                    @Html.DropDownList("Theme", ViewBag.Themes as SelectList, String.Empty, new { @class = "form-control" })
                </div>
                @Html.ValidationMessageFor(model => model.Theme, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="clearfix"></div>
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 hidden-print">
            <a class="hidden-print show-loading-animation pull-left" data-loading-message="Henter innhold" href="/">Tilbake</a>
            @if (Request.IsAuthenticated)
            {
                <input type="submit" value="Opprett" class="btn btn-default btn-space pull-right" />
            }
        </div>
    </div>
}
@section scripts{
    <script src="@VirtualPathUtility.ToAbsolute("~/Scripts/select2.min.js")"></script>
    <script type="text/javascript" src="~/Scripts/custom.js"></script>
}
